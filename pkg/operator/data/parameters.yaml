{{- $fullname := (printf "redis-%s" .Name) }}

fullnameOverride: {{ $fullname }}

{{- $sentinelEnabled := (dig "sentinel" "enabled" false .) }}
{{- $metricsEnabled := (dig "metrics" "enabled" false .) }}
{{- $metricsServiceMonitorEnabled := (dig "metrics" "monitor" "enabled" false .) }}
{{- $metricsPrometheusRuleEnabled := (dig "metrics" "prometheusRule" "enabled" false .) }}
{{- $tlsEnabled := (dig "tls" "enabled" false .) }}
{{- $persistenceEnabled := (dig "persistence" "enabled" false .) }}

{{- $bindingSecretName := (dig "binding" "secretName" "" .) }}
{{- if eq $bindingSecretName "" }}
{{- $bindingSecretName = printf "%s-binding" $fullname }}
{{- end }}

image:
  repository: bitnamilegacy/redis
  {{- with .version}}
  tag: {{ . }}
  {{- end }}

{{- if $persistenceEnabled }}
{{- with .persistence.storageClass }}
global:
  storageClass: {{ . }}
{{- end }}
{{- end }}

{{- if gt .replicas 1 }}
pdb:
  create: true
  minAvailable: "50%"
{{- end }}

master:
  replicaCount: 1
  {{- with .nodeSelector }}
  nodeSelector:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .affinity }}
  affinity:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .topologySpreadConstraints }}
  topologySpreadConstraints:
  {{- toYaml . | nindent 2 }}
  {{- end }}
  {{- with .tolerations }}
  tolerations:
  {{- toYaml . | nindent 2 }}
  {{- end }}
  {{- with .priorityClassName }}
  priorityClassName: {{ . }}
  {{- end }}
  {{- with .podSecurityContext }}
  podSecurityContext:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .podLabels }}
  podLabels:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .podAnnotations }}
  podAnnotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .resources }}
  resources:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .securityContext }}
  containerSecurityContext:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  persistence:
    enabled: {{ $persistenceEnabled }}
    {{- if $persistenceEnabled }}
    {{- with .persistence.size }}
    size: {{ . }}
    {{- end }}
    {{- end }}
  {{- if .persistence }}
  {{- with .persistence.extraVolumes }}
  extraVolumes: 
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- end }}
  {{- with .sidecars }}
  sidecars:
    {{- toYaml . | nindent 4 }}
  {{- end }} 
  
replica:
  replicaCount: {{ ternary .replicas (max (sub .replicas 1) 0) $sentinelEnabled }}
  {{- with .nodeSelector }}
  nodeSelector:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .affinity }}
  affinity:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .topologySpreadConstraints }}
  topologySpreadConstraints:
  {{- toYaml . | nindent 2 }}
  {{- end }}
  {{- with .tolerations }}
  tolerations:
  {{- toYaml . | nindent 2 }}
  {{- end }}
  {{- with .priorityClassName }}
  priorityClassName: {{ . }}
  {{- end }}
  {{- with .podSecurityContext }}
  podSecurityContext:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .podLabels }}
  podLabels:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .podAnnotations }}
  podAnnotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .resources }}
  resources:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .securityContext }}
  containerSecurityContext:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  persistence:
    enabled: {{ $persistenceEnabled }}
    {{- if $persistenceEnabled }}
    {{- with .persistence.size }}
    size: {{ . }}
    {{- end }}
    {{- end }}
  {{- if .persistence }}
  {{- with .persistence.extraVolumes }}
  extraVolumes: 
    {{- toYaml . | nindent 4 }}
  {{- end }} 
  {{- end }}
  {{- with .sidecars }}
  sidecars:
    {{- toYaml . | nindent 4 }}
  {{- end }}

{{- if $sentinelEnabled }}
sentinel:
  enabled: true
  image:
    repository: bitnamilegacy/redis-sentinel
    {{- with .Version }}
    tag: {{ . }}
    {{- end }}
  {{- with .sentinel.resources }}
  resources:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .sentinel.securityContext }}
  containerSecurityContext:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}

{{- if $metricsEnabled }}
metrics:
  enabled: true
  image:
    repository: bitnamilegacy/redis-exporter
  {{- with .metrics.resources }}
  resources:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .metrics.securityContext }}
  containerSecurityContext:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if $metricsServiceMonitorEnabled }}
  {{- with .metrics.monitor }}
  serviceMonitor:
    {{- toYaml . | nindent 4 }}
  {{- end }}{{- end }}
  {{- if $metricsPrometheusRuleEnabled }}
  {{- with .metrics.prometheusRule }}
  prometheusRule:
    {{- toYaml . | nindent 4 }}
  {{- end }}{{- end }}  
{{- end }}

{{- if $tlsEnabled }}
tls:
  enabled: true
  authClients: false
  {{- if (hasKey .tls "certManager") }}
  existingSecret: {{ printf "%s-tls" $fullname }}
  certKeyFilename: tls.key
  certFilename: tls.crt
  certCAFilename: ca.crt
  {{- else }}
  autoGenerated: true
  {{- end }}
{{- end }}

networkPolicy:
  enabled: true
  extraEgress:
  - ports:
    - protocol: UDP
    - protocol: TCP

extraDeploy:
- apiVersion: v1
  kind: Secret
  metadata:
    name: {{ $bindingSecretName }}
    annotations:
      helm.sh/hook: post-install
  type: Opaque
{{- if and $tlsEnabled (hasKey .tls "certManager") }}
- apiVersion: cert-manager.io/v1
  kind: Certificate
  metadata:
    name: {{ $fullname }}
  spec:
    secretName: {{ printf "%s-tls" $fullname }}
    commonName: {{ $fullname }}
    dnsNames:
    - '{{ printf "%s.%s.svc.cluster.local" $fullname .Namespace }}'
    - '{{ printf "%s.%s.svc" $fullname .Namespace }}'
    - '{{ printf "%s.%s" $fullname .Namespace }}'
    - '{{ printf "%s" $fullname }}'
    - '{{ printf "*.%s.%s.svc.cluster.local" $fullname .Namespace }}'
    - '{{ printf "*.%s.%s.svc" $fullname .Namespace }}'
    - '{{ printf "*.%s.%s" $fullname .Namespace }}'
    - '{{ printf "*.%s" $fullname }}'
    - '{{ printf "%s-master.%s.svc.cluster.local" $fullname .Namespace }}'
    - '{{ printf "%s-master.%s.svc" $fullname .Namespace }}'
    - '{{ printf "%s-master.%s" $fullname .Namespace }}'
    - '{{ printf "%s-master" $fullname }}'
    - '{{ printf "*.%s-master.%s.svc.cluster.local" $fullname .Namespace }}'
    - '{{ printf "*.%s-master.%s.svc" $fullname .Namespace }}'
    - '{{ printf "*.%s-master.%s" $fullname .Namespace }}'
    - '{{ printf "*.%s-master" $fullname }}'
    - '{{ printf "%s-headless.%s.svc.cluster.local" $fullname .Namespace }}'
    - '{{ printf "%s-headless.%s.svc" $fullname .Namespace }}'
    - '{{ printf "%s-headless.%s" $fullname .Namespace }}'
    - '{{ printf "%s-headless" $fullname }}'
    - '{{ printf "*.%s-headless.%s.svc.cluster.local" $fullname .Namespace }}'
    - '{{ printf "*.%s-headless.%s.svc" $fullname .Namespace }}'
    - '{{ printf "*.%s-headless.%s" $fullname .Namespace }}'
    - '{{ printf "*.%s-headless" $fullname }}'
    - localhost
    ipAddresses:
    - 127.0.0.1
    issuerRef:
      {{- with .tls.certManager.issuer }}
      {{ toYaml . | nindent 6 }}
      {{- else }}
      name: {{ $fullname }}-selfsigned
      {{- end }}
    duration: 876000h
{{- if not .tls.certManager.issuer }}
- apiVersion: cert-manager.io/v1
  kind: Issuer
  metadata:
    name: {{ $fullname }}-selfsigned
  spec:
    selfSigned: {}
{{- end }}
{{- end }}