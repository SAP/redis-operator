/*
SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and redis-operator contributors
SPDX-License-Identifier: Apache-2.0
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/sap/redis-operator/api/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RedisLister helps list Redis.
// All objects returned here must be treated as read-only.
type RedisLister interface {
	// List lists all Redis in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Redis, err error)
	// Redis returns an object that can list and get Redis.
	Redis(namespace string) RedisNamespaceLister
	RedisListerExpansion
}

// redisLister implements the RedisLister interface.
type redisLister struct {
	indexer cache.Indexer
}

// NewRedisLister returns a new RedisLister.
func NewRedisLister(indexer cache.Indexer) RedisLister {
	return &redisLister{indexer: indexer}
}

// List lists all Redis in the indexer.
func (s *redisLister) List(selector labels.Selector) (ret []*v1alpha1.Redis, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Redis))
	})
	return ret, err
}

// Redis returns an object that can list and get Redis.
func (s *redisLister) Redis(namespace string) RedisNamespaceLister {
	return redisNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RedisNamespaceLister helps list and get Redis.
// All objects returned here must be treated as read-only.
type RedisNamespaceLister interface {
	// List lists all Redis in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Redis, err error)
	// Get retrieves the Redis from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Redis, error)
	RedisNamespaceListerExpansion
}

// redisNamespaceLister implements the RedisNamespaceLister
// interface.
type redisNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Redis in the indexer for a given namespace.
func (s redisNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Redis, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Redis))
	})
	return ret, err
}

// Get retrieves the Redis from the indexer for a given namespace and name.
func (s redisNamespaceLister) Get(name string) (*v1alpha1.Redis, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("redis"), name)
	}
	return obj.(*v1alpha1.Redis), nil
}
